{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GAMING\\\\Downloads\\\\kino\\\\src\\\\index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\nimport LoginForm from \"./auth/LoginForm\";\nimport RegisterForm from \"./auth/RegisterForm\";\nimport Navbar from \"./Navbar\";\nimport Movie from \"./movie/movie\";\nimport Projections from \"./movieProjections/projectionsPage\";\nimport Reviews from \"./movieReview/reviewPage\";\nimport { AuthProvider } from \"./auth/AuthContext\";\nimport PrivateRoute from \"./auth/AuthGuard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    element: /*#__PURE__*/_jsxDEV(PrivateRoute, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this),\n      path: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this),\n      path: \"/movie/:id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/movie/:id/projections\",\n      element: /*#__PURE__*/_jsxDEV(Projections, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/movie/:id/review\",\n      element: /*#__PURE__*/_jsxDEV(Reviews, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this),\n    path: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    element: /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this),\n    path: \"/register\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this)]\n}, void 0, true)));\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","createBrowserRouter","createRoutesFromElements","Route","RouterProvider","LoginForm","RegisterForm","Navbar","Movie","Projections","Reviews","AuthProvider","PrivateRoute","router","root","createRoot","document","getElementById","render"],"sources":["C:/Users/GAMING/Downloads/kino/src/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  Route,\r\n  RouterProvider,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport LoginForm from \"./auth/LoginForm\";\r\nimport RegisterForm from \"./auth/RegisterForm\";\r\nimport Navbar from \"./Navbar\";\r\nimport Movie from \"./movie/movie\";\r\nimport Projections from \"./movieProjections/projectionsPage\";\r\nimport Reviews from \"./movieReview/reviewPage\";\r\nimport { AuthProvider } from \"./auth/AuthContext\";\r\nimport PrivateRoute from \"./auth/AuthGuard\";\r\n\r\nconst router = createBrowserRouter(\r\n  createRoutesFromElements(\r\n    <>\r\n      <Route element={<PrivateRoute />}>\r\n        <Route element={<App />} path=\"/\" />\r\n        <Route element={<Movie />} path=\"/movie/:id\" />\r\n        <Route path=\"/movie/:id/projections\" element={<Projections />} />\r\n        <Route path=\"/movie/:id/review\" element={<Reviews />} />\r\n      </Route>\r\n      <Route element={<LoginForm />} path=\"/login\" />\r\n      <Route element={<RegisterForm />} path=\"/register\" />\r\n    </>\r\n  )\r\n);\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <Navbar />\r\n      <RouterProvider router={router} />\r\n    </AuthProvider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SACEC,mBAAmB,EACnBC,wBAAwB,EACxBC,KAAK,EACLC,cAAc,QAET,kBAAkB;AACzB,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAAC;AAAA;AAE5C,MAAMC,MAAM,GAAGZ,mBAAmB,CAChCC,wBAAwB,eACtB;EAAA,wBACE,QAAC,KAAK;IAAC,OAAO,eAAE,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAI;IAAA,wBAC/B,QAAC,KAAK;MAAC,OAAO,eAAE,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAI;MAAC,IAAI,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC,QAAC,KAAK;MAAC,OAAO,eAAE,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAI;MAAC,IAAI,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/C,QAAC,KAAK;MAAC,IAAI,EAAC,wBAAwB;MAAC,OAAO,eAAE,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACjE,QAAC,KAAK;MAAC,IAAI,EAAC,mBAAmB;MAAC,OAAO,eAAE,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD,eACR,QAAC,KAAK;IAAC,OAAO,eAAE,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAI;IAAC,IAAI,EAAC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAG,eAC/C,QAAC,KAAK;IAAC,OAAO,eAAE,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAI;IAAC,IAAI,EAAC;EAAW;IAAA;IAAA;IAAA;EAAA,QAAG;AAAA,gBACpD,CACJ,CACF;AAED,MAAMY,IAAI,GAAGhB,QAAQ,CAACiB,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC;AACDH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,YAAY;IAAA,wBACX,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,cAAc;MAAC,MAAM,EAAEL;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA;AACrB;EAAA;EAAA;EAAA;AAAA,QACE,CACpB;;AAED;AACA;AACA;AACAb,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}